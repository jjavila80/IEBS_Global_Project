#!/bin/bash

API_URL="http://192.168.49.2:30531/api"

echo "üîß Pruebas de validaci√≥n de entrada para registro, login y creaci√≥n de usuario..."

# Registro v√°lido
echo "üîß Registrando usuario v√°lido..."
REGISTER_OK=$(curl -s -o /dev/null -w "%{http_code}" -X POST "$API_URL/register" \
  -H "Content-Type: application/json" \
  -d '{"email":"valido@example.com","password":"validPass123","nombre":"Valido","apellido":"Usuario"}')

if [ "$REGISTER_OK" -eq 201 ]; then
  echo "‚úÖ Registro v√°lido OK (201)"
else
  echo "‚ùå Registro v√°lido fall√≥ ($REGISTER_OK)"
fi

# Registro email inv√°lido
echo "‚ùå Registrando con email inv√°lido..."
REGISTER_EMAIL_INV=$(curl -s -o /dev/null -w "%{http_code}" -X POST "$API_URL/register" \
  -H "Content-Type: application/json" \
  -d '{"email":"no-es-email","password":"userpass","nombre":"Test","apellido":"User"}')

if [ "$REGISTER_EMAIL_INV" -eq 400 ]; then
  echo "‚úÖ Email inv√°lido rechazado (400)"
else
  echo "‚ùå Email inv√°lido no fue rechazado ($REGISTER_EMAIL_INV)"
fi

# Registro contrase√±a vac√≠a
echo "‚ùå Registrando con contrase√±a vac√≠a..."
REGISTER_PASS_VACIA=$(curl -s -o /dev/null -w "%{http_code}" -X POST "$API_URL/register" \
  -H "Content-Type: application/json" \
  -d '{"email":"user2@example.com","password":"","nombre":"Test","apellido":"User"}')

if [ "$REGISTER_PASS_VACIA" -eq 400 ]; then
  echo "‚úÖ Contrase√±a vac√≠a rechazada (400)"
else
  echo "‚ùå Contrase√±a vac√≠a no fue rechazada ($REGISTER_PASS_VACIA)"
fi

# Registro con email duplicado
echo "‚ùå Registrando con email duplicado..."
REGISTER_DUPLICADO=$(curl -s -o /dev/null -w "%{http_code}" -X POST "$API_URL/register" \
  -H "Content-Type: application/json" \
  -d '{"email":"valido@example.com","password":"otraPass123","nombre":"Test","apellido":"User"}')

if [ "$REGISTER_DUPLICADO" -eq 409 ]; then
  echo "‚úÖ Email duplicado rechazado (409)"
else
  echo "‚ùå Email duplicado no fue rechazado ($REGISTER_DUPLICADO)"
fi

# Login v√°lido
echo "üîê Login con usuario v√°lido..."
LOGIN_OK=$(curl -s -o /dev/null -w "%{http_code}" -X POST "$API_URL/login" \
  -H "Content-Type: application/json" \
  -d '{"email":"valido@example.com","password":"validPass123"}')

if [ "$LOGIN_OK" -eq 200 ]; then
  echo "‚úÖ Login v√°lido OK (200)"
else
  echo "‚ùå Login v√°lido fall√≥ ($LOGIN_OK)"
fi

# Login con email no existente
echo "‚ùå Login con email no existente..."
LOGIN_NOEXISTE=$(curl -s -o /dev/null -w "%{http_code}" -X POST "$API_URL/login" \
  -H "Content-Type: application/json" \
  -d '{"email":"noexiste@example.com","password":"anyPass"}')

if [ "$LOGIN_NOEXISTE" -eq 401 ]; then
  echo "‚úÖ Email no existente rechazado (401)"
else
  echo "‚ùå Email no existente no fue rechazado ($LOGIN_NOEXISTE)"
fi

# Login con contrase√±a incorrecta
echo "‚ùå Login con contrase√±a incorrecta..."
LOGIN_PASS_INCORR=$(curl -s -o /dev/null -w "%{http_code}" -X POST "$API_URL/login" \
  -H "Content-Type: application/json" \
  -d '{"email":"valido@example.com","password":"wrongPass"}')

if [ "$LOGIN_PASS_INCORR" -eq 401 ]; then
  echo "‚úÖ Contrase√±a incorrecta rechazada (401)"
else
  echo "‚ùå Contrase√±a incorrecta no fue rechazada ($LOGIN_PASS_INCORR)"
fi

# Crear usuario admin v√°lido (primero login para token)
echo "üîê Login admin para crear usuario..."
LOGIN_ADMIN_RESP=$(curl -s -X POST "$API_URL/login" \
  -H "Content-Type: application/json" \
  -d '{"email":"admin@example.com","password":"adminpass"}')

ADMIN_TOKEN=$(echo "$LOGIN_ADMIN_RESP" | jq -r .token)

if [ "$ADMIN_TOKEN" == "null" ] || [ -z "$ADMIN_TOKEN" ]; then
  echo "‚ùå Login admin fall√≥. No se puede probar creaci√≥n de usuario."
  exit 1
fi

# Crear usuario v√°lido con token admin
echo "‚ûï Creando usuario v√°lido como admin..."
CREATE_OK=$(curl -s -o /dev/null -w "%{http_code}" -X POST "$API_URL/admin/users" \
  -H "Authorization: Bearer $ADMIN_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{"email":"nuevouser@example.com","password":"nuevoPass123","nombre":"Nuevo","apellido":"Usuario"}')

if [ "$CREATE_OK" -eq 201 ]; then
  echo "‚úÖ Creaci√≥n usuario v√°lida OK (201)"
else
  echo "‚ùå Creaci√≥n usuario v√°lida fall√≥ ($CREATE_OK)"
fi

# Crear usuario con email inv√°lido
echo "‚ùå Creando usuario con email inv√°lido..."
CREATE_EMAIL_INV=$(curl -s -o /dev/null -w "%{http_code}" -X POST "$API_URL/admin/users" \
  -H "Authorization: Bearer $ADMIN_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{"email":"malemail","password":"nuevoPass123","nombre":"Nuevo","apellido":"Usuario"}')

if [ "$CREATE_EMAIL_INV" -eq 400 ]; then
  echo "‚úÖ Creaci√≥n con email inv√°lido rechazada (400)"
else
  echo "‚ùå Creaci√≥n con email inv√°lido no fue rechazada ($CREATE_EMAIL_INV)"
fi

# Crear usuario sin token
echo "‚ùå Creando usuario sin token..."
CREATE_SIN_TOKEN=$(curl -s -o /dev/null -w "%{http_code}" -X POST "$API_URL/admin/users" \
  -H "Content-Type: application/json" \
  -d '{"email":"sinpermiso@example.com","password":"pass123","nombre":"No","apellido":"Token"}')

if [ "$CREATE_SIN_TOKEN" -eq 401 ]; then
  echo "‚úÖ Creaci√≥n sin token rechazada (401)"
else
  echo "‚ùå Creaci√≥n sin token no fue rechazada ($CREATE_SIN_TOKEN)"
fi

echo "‚úÖ Pruebas de validaci√≥n de entrada completadas."

